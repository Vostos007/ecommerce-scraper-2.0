#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ—Å—Ç–∏–∂–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–∫—Å–∏
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/test_proxy_reachability.sh [target_url]

set -euo pipefail

trap 'rm -f /tmp/proxy_test_$$.*' EXIT

TARGET_URL="https://ili-ili.com"
DETAILED=false
MEASURE_LATENCY=false

while [[ $# -gt 0 ]]; do
    case "$1" in
        --detailed)
            DETAILED=true
            shift
            ;;
        --latency)
            MEASURE_LATENCY=true
            shift
            ;;
        -*)
            echo "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–ª–∞–≥: $1" >&2
            exit 1
            ;;
        *)
            TARGET_URL="$1"
            shift
            ;;
    esac
done
PROXY_FILE="config/manual_proxies.txt"
TIMEOUT=10
RESULTS_FILE="logs/proxy_test_$(date +%Y%m%d_%H%M%S).log"

echo "üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∫—Å–∏ –¥–ª—è $TARGET_URL"
echo "üìù –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: $RESULTS_FILE"
echo "=================================="

mkdir -p logs

# –°—á–µ—Ç—á–∏–∫–∏
TOTAL=0
SUCCESS=0
FAILED=0

test_proxy() {
    local proxy_url="$1"
    local index="$2"
    
    echo -n "[$index] –¢–µ—Å—Ç $proxy_url ... "
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–æ—Ç–æ–∫–æ–ª
    if [[ $proxy_url == socks5://* ]]; then
        PROXY_PROTOCOL="socks5"
    elif [[ $proxy_url == https://* ]]; then
        PROXY_PROTOCOL="https"
    elif [[ $proxy_url == http://* ]]; then
        PROXY_PROTOCOL="http"
    else
        echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª"
        return 1
    fi
    
    # –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    if timeout $TIMEOUT curl -x "$proxy_url" \
        --connect-timeout $TIMEOUT \
        -s -o /dev/null -w "%{http_code}" \
        "$TARGET_URL" > /tmp/proxy_test_$$.status 2>/tmp/proxy_test_$$.error; then
        
        STATUS=$(cat /tmp/proxy_test_$$.status)
        
        if [ "$STATUS" = "000" ]; then
            echo "‚ùå ConnectTimeout (–Ω–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ)"
            echo "[$index] $proxy_url - FAILED (ConnectTimeout)" >> "$RESULTS_FILE"
            return 1
        elif [ "$STATUS" -ge 200 ] && [ "$STATUS" -lt 600 ]; then
            echo "‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç (HTTP $STATUS)"
            echo "[$index] $proxy_url - SUCCESS (HTTP $STATUS)" >> "$RESULTS_FILE"
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            RESPONSE_TIME=$(timeout $TIMEOUT curl -x "$proxy_url" \
                --connect-timeout $TIMEOUT \
                -s -o /dev/null -w "%{time_total}" \
                "$TARGET_URL" 2>/dev/null || echo "N/A")
            echo "    ‚è±Ô∏è  –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: ${RESPONSE_TIME}s" | tee -a "$RESULTS_FILE"

            if $MEASURE_LATENCY; then
                read CONNECT_TIME START_TRANSFER TOTAL_TIME < <(
                    timeout $TIMEOUT curl -x "$proxy_url" \
                        --connect-timeout $TIMEOUT \
                        -s -o /dev/null \
                        -w "%{time_connect} %{time_starttransfer} %{time_total}" \
                        "$TARGET_URL" 2>/dev/null || echo "N/A N/A N/A"
                )
                echo "    ‚ö° Latency: connect=${CONNECT_TIME}s start_transfer=${START_TRANSFER}s total=${TOTAL_TIME}s" | tee -a "$RESULTS_FILE"
            fi

            if $DETAILED; then
                timeout $TIMEOUT curl -x "$proxy_url" \
                    --connect-timeout $TIMEOUT \
                    -s -D /tmp/proxy_test_$$.headers \
                    -o /tmp/proxy_test_$$.preview \
                    "$TARGET_URL" >/dev/null 2>&1 || true

                if [ -s /tmp/proxy_test_$$.headers ]; then
                    head -n 5 /tmp/proxy_test_$$.headers | sed 's/^/    üìÑ /' | tee -a "$RESULTS_FILE"
                fi
                if [ -s /tmp/proxy_test_$$.preview ]; then
                    head -c 120 /tmp/proxy_test_$$.preview | sed 's/^/    üîé /' | tee -a "$RESULTS_FILE"
                fi
            fi

            return 0
        else
            echo "‚ö†Ô∏è  –°—Ç—Ä–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: $STATUS"
            echo "[$index] $proxy_url - WARNING (HTTP $STATUS)" >> "$RESULTS_FILE"
            return 0
        fi
    else
        ERROR=$(cat /tmp/proxy_test_$$.error 2>/dev/null | head -n 1 || echo "Unknown error")
        echo "‚ùå –û—à–∏–±–∫–∞: $ERROR"
        echo "[$index] $proxy_url - FAILED ($ERROR)" >> "$RESULTS_FILE"
        if $DETAILED && [ -s /tmp/proxy_test_$$.error ]; then
            head -n 3 /tmp/proxy_test_$$.error | sed 's/^/    ‚ö†Ô∏è  /' | tee -a "$RESULTS_FILE"
        fi
        return 1
    fi
    
    rm -f /tmp/proxy_test_$$.status /tmp/proxy_test_$$.error /tmp/proxy_test_$$.headers /tmp/proxy_test_$$.preview
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
if [ ! -f "$PROXY_FILE" ]; then
    echo "‚ùå –§–∞–π–ª $PROXY_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

echo "" > "$RESULTS_FILE"
echo "üß™ –¢–µ—Å—Ç –ø—Ä–æ–∫—Å–∏ –¥–ª—è $TARGET_URL - $(date)" >> "$RESULTS_FILE"
echo "================================" >> "$RESULTS_FILE"

INDEX=1
while IFS= read -r proxy_line || [ -n "$proxy_line" ]; do
    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
    [[ -z "$proxy_line" || "$proxy_line" =~ ^# ]] && continue
    
    TOTAL=$((TOTAL + 1))
    
    if test_proxy "$proxy_line" "$INDEX"; then
        SUCCESS=$((SUCCESS + 1))
    else
        FAILED=$((FAILED + 1))
    fi
    
    INDEX=$((INDEX + 1))
    sleep 1  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏
    
done < "$PROXY_FILE"

# –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
echo ""
echo "================================"
echo "üìä –ò—Ç–æ–≥–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:"
echo "   –í—Å–µ–≥–æ: $TOTAL"
echo "   ‚úÖ –£—Å–ø–µ—à–Ω–æ: $SUCCESS"
echo "   ‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞—é—Ç: $FAILED"
echo "   üìà –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: $(awk "BEGIN {printf \"%.1f\", ($SUCCESS/$TOTAL)*100}")%"
echo ""
echo "üìù –ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç: $RESULTS_FILE"

# –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
if [ $SUCCESS -eq 0 ]; then
    echo ""
    echo "‚ö†Ô∏è  –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:"
    echo "   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –∏–∑ –≤–∞—à–µ–π —Å–µ—Ç–∏"
    echo "   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ ili-ili.com –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç IP-–∞–¥—Ä–µ—Å–∞ –ø—Ä–æ–∫—Å–∏"
    echo "   3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–æ–∫—Å–∏ –±–ª–∏–∂–µ –∫ –ú–æ—Å–∫–æ–≤—Å–∫–æ–º—É —Ä–µ–≥–∏–æ–Ω—É"
    echo "   4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–∫—Å–∏"
elif [ $SUCCESS -lt $((TOTAL / 2)) ]; then
    echo ""
    echo "‚ö†Ô∏è  –ú–µ–Ω–µ–µ 50% –ø—Ä–æ–∫—Å–∏ —Ä–∞–±–æ—Ç–∞—é—Ç. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫."
fi

exit 0
